compoundStmt = (declarationStmt | arrayDeclarationStatement | statement) ";" [compoundStatement]
arrayDeclarationStatement = identifier ":" primitiveType "." "array" "("  int_number  ")"
primitiveType = "integer" | "character" | "string" | "boolean"
constValue = int_number | char | constString
stmtlist = stmt | stmt ";" stmtlist
statement = assigntStmt | ioStatement | ifStmt | whileStmt
ioStatement = readStmt | writeStmt 
assignStmt = identifier "=" expression
term = term "*" factor | factor
factor = "(" expression ")" | IDENTIFIER
readStmt = read "(" identifier ")"
writeStmt = write "(" identifier ")"
ifStmt = "VERIFY" "[" condition "]" ":" "{" compoundStatement "}" ["OTHERWISE" "{" compoundStatement "}"] 
whileStmt ::= "WHILE" "[" condition "]" ":" "{" compoundStatement "}"
condition = expression RELATION expression 
relationalOperator =  "<" | ">" | "<=" | ">=" | "==" || "!=" | "&" | "|" | "<>"